cmake_minimum_required(VERSION 3.10)
project(libcurl)

# Allow enabling and disabling components
option(CURL_WERROR "Turn compiler warnings into errors" OFF)
option(PICKY_COMPILER "Enable picky compiler options" ON)
option(BUILD_CURL_EXE "Set to ON to build curl executable." ON)
option(BUILD_SHARED_LIBS "Build shared libraries" ON)
option(ENABLE_ARES "Set to ON to enable c-ares support" OFF)
option(ENABLE_DEBUG "Set to ON to enable curl debug features" OFF)
option(ENABLE_CURLDEBUG "Set to ON to build with TrackMemory feature enabled" OFF)
option(BUILD_TESTING "Build the libcurl testing" OFF)
option(CURL_ZLIB "Set to ON to enable building curl with zlib support." ON)
option(CURL_DISABLE_LDAP "disables LDAP" OFF)
option(CURL_DISABLE_LDAPS "to disable LDAPS" OFF)
option(CURL_HIDDEN_SYMBOLS "Set to ON to hide libcurl internal symbols (=hide all symbols that aren't officially external)." ON)

set(CURL_ZLIB OFF)
set(BUILD_TESTING OFF)
set(CURL_WERROR OFF)
set(PICKY_COMPILER ON)
set(BUILD_CURL_EXE OFF)
set(BUILD_SHARED_LIBS OFF)
set(ENABLE_ARES OFF)
set(ENABLE_DEBUG ON)
set(ENABLE_CURLDEBUG ON)
set(CURL_DISABLE_LDAP ON)
set(CURL_DISABLE_LDAPS ON)
set(CURL_HIDDEN_SYMBOLS OFF)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g -fPIC")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -fPIC")

if(USE_SYSTEM_SSL)
    message("+++++++++++use system ssl USE_SYSTEM_SSL = ${USE_SYSTEM_SSL}")
    set(OPENSSL_ROOT_DIR ${OPENSSL_ROOT_DIR})
    set(OPENSSL_INCLUDE_DIR ${OPENSSL_ROOT_DIR}/include)
    message("+++++++++++OPENSSL_ROOT_DIR = ${OPENSSL_ROOT_DIR}  OPENSSL_INCLUDE_DIR = ${OPENSSL_INCLUDE_DIR}")
else()
    message("+++++++++++use project compile ssl USE_SYSTEM_SSL = ${USE_SYSTEM_SSL}")
    set(OPENSSL_ROOT_DIR ${CMAKE_INSTALL_PREFIX}/lib)
    set(OPENSSL_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)
    message("+++++++++++OPENSSL_ROOT_DIR = ${OPENSSL_ROOT_DIR}  OPENSSL_INCLUDE_DIR = ${OPENSSL_INCLUDE_DIR}")
endif()

add_subdirectory(curl-7.76.0)
